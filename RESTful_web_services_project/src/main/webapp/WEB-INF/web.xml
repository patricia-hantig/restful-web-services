<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
    <display-name>Chapter1</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!--configure web.xml to the bound Jersey Container with the resources packages-->
    <!-- Deploying a RESTful web service without using Application class -->
    <!--<servlet>
        <servlet-name>Simple Jersey Example</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>com.demo</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Simple Jersey Example</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>-->

     <!--Deploying a RESTful web service using Application class or using ResourceConfig class-->
    <servlet>
        <servlet-name>Simple Jersey Example</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <!--<param-value>com.demo.MainApplication</param-value>-->

            <!-- to test JSONP example -->
            <!--<param-value>com.demo.JSON.JSONP.UsingResourceConfig</param-value>-->

            <!-- to test Jackson example -->
            <!--<param-value>com.demo.JSON.Jackson.UsingResourceConfig</param-value>-->

            <!-- to test Jettison example -->
            <param-value>com.demo.JSON.Jettison.UsingResourceConfig</param-value>

        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Simple Jersey Example</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <!-- ServletContainer - is treated as a Controller to redirect the specified resource that is called -->
    <!-- jersey.config.server.provider.packages - maps the resources from 'com.demo' -->
    <!-- => when a resource is requested ServletContainer checks into 'com.demo' for the resource URI & serves the request -->

</web-app>
